//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 11/27/2022 9:27:22 PM
namespace Microsoft.Dynamics.DataEntities
{
    /// <summary>
    /// There are no comments for ExchangeRateCurrencyPairSingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("ExchangeRateCurrencyPairSingle")]
    public partial class ExchangeRateCurrencyPairSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<ExchangeRateCurrencyPair>
    {
        /// <summary>
        /// Initialize a new ExchangeRateCurrencyPairSingle object.
        /// </summary>
        public ExchangeRateCurrencyPairSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new ExchangeRateCurrencyPairSingle object.
        /// </summary>
        public ExchangeRateCurrencyPairSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new ExchangeRateCurrencyPairSingle object.
        /// </summary>
        public ExchangeRateCurrencyPairSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<ExchangeRateCurrencyPair> query)
            : base(query) {}

        /// <summary>
        /// There are no comments for ExchangeRateType in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("ExchangeRateType")]
        public virtual global::Microsoft.Dynamics.DataEntities.ExchangeRateTypeSingle ExchangeRateType
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._ExchangeRateType == null))
                {
                    this._ExchangeRateType = new global::Microsoft.Dynamics.DataEntities.ExchangeRateTypeSingle(this.Context, GetPath("ExchangeRateType"));
                }
                return this._ExchangeRateType;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.Dynamics.DataEntities.ExchangeRateTypeSingle _ExchangeRateType;
        /// <summary>
        /// There are no comments for ExchangeRateCurrencyPair_ExchangeRate in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("ExchangeRateCurrencyPair_ExchangeRate")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExchangeRateCDSEntity> ExchangeRateCurrencyPair_ExchangeRate
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._ExchangeRateCurrencyPair_ExchangeRate == null))
                {
                    this._ExchangeRateCurrencyPair_ExchangeRate = Context.CreateQuery<global::Microsoft.Dynamics.DataEntities.ExchangeRateCDSEntity>(GetPath("ExchangeRateCurrencyPair_ExchangeRate"));
                }
                return this._ExchangeRateCurrencyPair_ExchangeRate;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExchangeRateCDSEntity> _ExchangeRateCurrencyPair_ExchangeRate;
    }
    /// <summary>
    /// There are no comments for ExchangeRateCurrencyPair in the schema.
    /// </summary>
    /// <KeyProperties>
    /// FromCurrencyCode
    /// ToCurrencyCode
    /// ExchangeRateTypeName
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("FromCurrencyCode", "ToCurrencyCode", "ExchangeRateTypeName")]
    [global::Microsoft.OData.Client.EntitySet("ExchangeRateCurrencyPairs")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("ExchangeRateCurrencyPair")]
    public partial class ExchangeRateCurrencyPair : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new ExchangeRateCurrencyPair object.
        /// </summary>
        /// <param name="fromCurrencyCode">Initial value of FromCurrencyCode.</param>
        /// <param name="toCurrencyCode">Initial value of ToCurrencyCode.</param>
        /// <param name="exchangeRateTypeName">Initial value of ExchangeRateTypeName.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static ExchangeRateCurrencyPair CreateExchangeRateCurrencyPair(string fromCurrencyCode, string toCurrencyCode, string exchangeRateTypeName)
        {
            ExchangeRateCurrencyPair exchangeRateCurrencyPair = new ExchangeRateCurrencyPair();
            exchangeRateCurrencyPair.FromCurrencyCode = fromCurrencyCode;
            exchangeRateCurrencyPair.ToCurrencyCode = toCurrencyCode;
            exchangeRateCurrencyPair.ExchangeRateTypeName = exchangeRateTypeName;
            return exchangeRateCurrencyPair;
        }
        /// <summary>
        /// There are no comments for Property FromCurrencyCode in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("FromCurrencyCode")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "FromCurrencyCode is required.")]
        public virtual string FromCurrencyCode
        {
            get
            {
                return this._FromCurrencyCode;
            }
            set
            {
                this.OnFromCurrencyCodeChanging(value);
                this._FromCurrencyCode = value;
                this.OnFromCurrencyCodeChanged();
                this.OnPropertyChanged("FromCurrencyCode");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _FromCurrencyCode;
        partial void OnFromCurrencyCodeChanging(string value);
        partial void OnFromCurrencyCodeChanged();
        /// <summary>
        /// There are no comments for Property ToCurrencyCode in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("ToCurrencyCode")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "ToCurrencyCode is required.")]
        public virtual string ToCurrencyCode
        {
            get
            {
                return this._ToCurrencyCode;
            }
            set
            {
                this.OnToCurrencyCodeChanging(value);
                this._ToCurrencyCode = value;
                this.OnToCurrencyCodeChanged();
                this.OnPropertyChanged("ToCurrencyCode");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _ToCurrencyCode;
        partial void OnToCurrencyCodeChanging(string value);
        partial void OnToCurrencyCodeChanged();
        /// <summary>
        /// There are no comments for Property ExchangeRateTypeName in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("ExchangeRateTypeName")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "ExchangeRateTypeName is required.")]
        public virtual string ExchangeRateTypeName
        {
            get
            {
                return this._ExchangeRateTypeName;
            }
            set
            {
                this.OnExchangeRateTypeNameChanging(value);
                this._ExchangeRateTypeName = value;
                this.OnExchangeRateTypeNameChanged();
                this.OnPropertyChanged("ExchangeRateTypeName");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _ExchangeRateTypeName;
        partial void OnExchangeRateTypeNameChanging(string value);
        partial void OnExchangeRateTypeNameChanged();
        /// <summary>
        /// There are no comments for Property ExchangeRateDisplayFactor in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("ExchangeRateDisplayFactor")]
        public virtual global::System.Nullable<global::Microsoft.Dynamics.DataEntities.ExchangeRateDisplayFactor> ExchangeRateDisplayFactor
        {
            get
            {
                return this._ExchangeRateDisplayFactor;
            }
            set
            {
                this.OnExchangeRateDisplayFactorChanging(value);
                this._ExchangeRateDisplayFactor = value;
                this.OnExchangeRateDisplayFactorChanged();
                this.OnPropertyChanged("ExchangeRateDisplayFactor");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Nullable<global::Microsoft.Dynamics.DataEntities.ExchangeRateDisplayFactor> _ExchangeRateDisplayFactor;
        partial void OnExchangeRateDisplayFactorChanging(global::System.Nullable<global::Microsoft.Dynamics.DataEntities.ExchangeRateDisplayFactor> value);
        partial void OnExchangeRateDisplayFactorChanged();
        /// <summary>
        /// There are no comments for Property ExchangeRateType in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("ExchangeRateType")]
        public virtual global::Microsoft.Dynamics.DataEntities.ExchangeRateType ExchangeRateType
        {
            get
            {
                return this._ExchangeRateType;
            }
            set
            {
                this.OnExchangeRateTypeChanging(value);
                this._ExchangeRateType = value;
                this.OnExchangeRateTypeChanged();
                this.OnPropertyChanged("ExchangeRateType");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.Dynamics.DataEntities.ExchangeRateType _ExchangeRateType;
        partial void OnExchangeRateTypeChanging(global::Microsoft.Dynamics.DataEntities.ExchangeRateType value);
        partial void OnExchangeRateTypeChanged();
        /// <summary>
        /// There are no comments for Property ExchangeRateCurrencyPair_ExchangeRate in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("ExchangeRateCurrencyPair_ExchangeRate")]
        public virtual global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.Dynamics.DataEntities.ExchangeRateCDSEntity> ExchangeRateCurrencyPair_ExchangeRate
        {
            get
            {
                return this._ExchangeRateCurrencyPair_ExchangeRate;
            }
            set
            {
                this.OnExchangeRateCurrencyPair_ExchangeRateChanging(value);
                this._ExchangeRateCurrencyPair_ExchangeRate = value;
                this.OnExchangeRateCurrencyPair_ExchangeRateChanged();
                this.OnPropertyChanged("ExchangeRateCurrencyPair_ExchangeRate");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.Dynamics.DataEntities.ExchangeRateCDSEntity> _ExchangeRateCurrencyPair_ExchangeRate = new global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.Dynamics.DataEntities.ExchangeRateCDSEntity>(null, global::Microsoft.OData.Client.TrackingMode.None);
        partial void OnExchangeRateCurrencyPair_ExchangeRateChanging(global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.Dynamics.DataEntities.ExchangeRateCDSEntity> value);
        partial void OnExchangeRateCurrencyPair_ExchangeRateChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
}
