//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 11/27/2022 9:27:22 PM
namespace Microsoft.Dynamics.DataEntities
{
    /// <summary>
    /// There are no comments for ExchSetupSingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("ExchSetupSingle")]
    public partial class ExchSetupSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<ExchSetup>
    {
        /// <summary>
        /// Initialize a new ExchSetupSingle object.
        /// </summary>
        public ExchSetupSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new ExchSetupSingle object.
        /// </summary>
        public ExchSetupSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new ExchSetupSingle object.
        /// </summary>
        public ExchSetupSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<ExchSetup> query)
            : base(query) {}

    }
    /// <summary>
    /// There are no comments for ExchSetup in the schema.
    /// </summary>
    /// <KeyProperties>
    /// DataAreaId
    /// ExchangeCode
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("dataAreaId", "ExchangeCode")]
    [global::Microsoft.OData.Client.EntitySet("ExchSetups")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("ExchSetup")]
    public partial class ExchSetup : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new ExchSetup object.
        /// </summary>
        /// <param name="dataAreaId">Initial value of DataAreaId.</param>
        /// <param name="exchangeCode">Initial value of ExchangeCode.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static ExchSetup CreateExchSetup(string dataAreaId, string exchangeCode)
        {
            ExchSetup exchSetup = new ExchSetup();
            exchSetup.DataAreaId = dataAreaId;
            exchSetup.ExchangeCode = exchangeCode;
            return exchSetup;
        }
        /// <summary>
        /// There are no comments for Property DataAreaId in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("dataAreaId")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "DataAreaId is required.")]
        public virtual string DataAreaId
        {
            get
            {
                return this._DataAreaId;
            }
            set
            {
                this.OnDataAreaIdChanging(value);
                this._DataAreaId = value;
                this.OnDataAreaIdChanged();
                this.OnPropertyChanged("dataAreaId");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _DataAreaId;
        partial void OnDataAreaIdChanging(string value);
        partial void OnDataAreaIdChanged();
        /// <summary>
        /// There are no comments for Property ExchangeCode in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("ExchangeCode")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "ExchangeCode is required.")]
        public virtual string ExchangeCode
        {
            get
            {
                return this._ExchangeCode;
            }
            set
            {
                this.OnExchangeCodeChanging(value);
                this._ExchangeCode = value;
                this.OnExchangeCodeChanged();
                this.OnPropertyChanged("ExchangeCode");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _ExchangeCode;
        partial void OnExchangeCodeChanging(string value);
        partial void OnExchangeCodeChanged();
        /// <summary>
        /// There are no comments for Property AccountType in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("AccountType")]
        public virtual global::System.Nullable<global::Microsoft.Dynamics.DataEntities.LedgerJournalACType> AccountType
        {
            get
            {
                return this._AccountType;
            }
            set
            {
                this.OnAccountTypeChanging(value);
                this._AccountType = value;
                this.OnAccountTypeChanged();
                this.OnPropertyChanged("AccountType");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Nullable<global::Microsoft.Dynamics.DataEntities.LedgerJournalACType> _AccountType;
        partial void OnAccountTypeChanging(global::System.Nullable<global::Microsoft.Dynamics.DataEntities.LedgerJournalACType> value);
        partial void OnAccountTypeChanged();
        /// <summary>
        /// There are no comments for Property AdvanceAccountLedgerDimensionDisplayValue in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("AdvanceAccountLedgerDimensionDisplayValue")]
        public virtual string AdvanceAccountLedgerDimensionDisplayValue
        {
            get
            {
                return this._AdvanceAccountLedgerDimensionDisplayValue;
            }
            set
            {
                this.OnAdvanceAccountLedgerDimensionDisplayValueChanging(value);
                this._AdvanceAccountLedgerDimensionDisplayValue = value;
                this.OnAdvanceAccountLedgerDimensionDisplayValueChanged();
                this.OnPropertyChanged("AdvanceAccountLedgerDimensionDisplayValue");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _AdvanceAccountLedgerDimensionDisplayValue;
        partial void OnAdvanceAccountLedgerDimensionDisplayValueChanging(string value);
        partial void OnAdvanceAccountLedgerDimensionDisplayValueChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
}
