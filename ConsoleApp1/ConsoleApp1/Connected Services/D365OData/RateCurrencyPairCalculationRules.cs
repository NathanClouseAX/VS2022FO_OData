//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 11/27/2022 9:27:22 PM
namespace Microsoft.Dynamics.DataEntities
{
    /// <summary>
    /// There are no comments for RateCurrencyPairCalculationRulesSingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("RateCurrencyPairCalculationRulesSingle")]
    public partial class RateCurrencyPairCalculationRulesSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<RateCurrencyPairCalculationRules>
    {
        /// <summary>
        /// Initialize a new RateCurrencyPairCalculationRulesSingle object.
        /// </summary>
        public RateCurrencyPairCalculationRulesSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new RateCurrencyPairCalculationRulesSingle object.
        /// </summary>
        public RateCurrencyPairCalculationRulesSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new RateCurrencyPairCalculationRulesSingle object.
        /// </summary>
        public RateCurrencyPairCalculationRulesSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<RateCurrencyPairCalculationRules> query)
            : base(query) {}

    }
    /// <summary>
    /// There are no comments for RateCurrencyPairCalculationRules in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ExchangeRateType
    /// Company
    /// FromCurrency
    /// ToCurrency
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("ExchangeRateType", "Company", "FromCurrency", "ToCurrency")]
    [global::Microsoft.OData.Client.EntitySet("RateCurrencyPairCalculationRules")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("RateCurrencyPairCalculationRules")]
    public partial class RateCurrencyPairCalculationRules : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new RateCurrencyPairCalculationRules object.
        /// </summary>
        /// <param name="exchangeRateType">Initial value of ExchangeRateType.</param>
        /// <param name="company">Initial value of Company.</param>
        /// <param name="fromCurrency">Initial value of FromCurrency.</param>
        /// <param name="toCurrency">Initial value of ToCurrency.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static RateCurrencyPairCalculationRules CreateRateCurrencyPairCalculationRules(string exchangeRateType, string company, string fromCurrency, string toCurrency)
        {
            RateCurrencyPairCalculationRules rateCurrencyPairCalculationRules = new RateCurrencyPairCalculationRules();
            rateCurrencyPairCalculationRules.ExchangeRateType = exchangeRateType;
            rateCurrencyPairCalculationRules.Company = company;
            rateCurrencyPairCalculationRules.FromCurrency = fromCurrency;
            rateCurrencyPairCalculationRules.ToCurrency = toCurrency;
            return rateCurrencyPairCalculationRules;
        }
        /// <summary>
        /// There are no comments for Property ExchangeRateType in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("ExchangeRateType")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "ExchangeRateType is required.")]
        public virtual string ExchangeRateType
        {
            get
            {
                return this._ExchangeRateType;
            }
            set
            {
                this.OnExchangeRateTypeChanging(value);
                this._ExchangeRateType = value;
                this.OnExchangeRateTypeChanged();
                this.OnPropertyChanged("ExchangeRateType");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _ExchangeRateType;
        partial void OnExchangeRateTypeChanging(string value);
        partial void OnExchangeRateTypeChanged();
        /// <summary>
        /// There are no comments for Property Company in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("Company")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Company is required.")]
        public virtual string Company
        {
            get
            {
                return this._Company;
            }
            set
            {
                this.OnCompanyChanging(value);
                this._Company = value;
                this.OnCompanyChanged();
                this.OnPropertyChanged("Company");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Company;
        partial void OnCompanyChanging(string value);
        partial void OnCompanyChanged();
        /// <summary>
        /// There are no comments for Property FromCurrency in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("FromCurrency")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "FromCurrency is required.")]
        public virtual string FromCurrency
        {
            get
            {
                return this._FromCurrency;
            }
            set
            {
                this.OnFromCurrencyChanging(value);
                this._FromCurrency = value;
                this.OnFromCurrencyChanged();
                this.OnPropertyChanged("FromCurrency");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _FromCurrency;
        partial void OnFromCurrencyChanging(string value);
        partial void OnFromCurrencyChanged();
        /// <summary>
        /// There are no comments for Property ToCurrency in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("ToCurrency")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "ToCurrency is required.")]
        public virtual string ToCurrency
        {
            get
            {
                return this._ToCurrency;
            }
            set
            {
                this.OnToCurrencyChanging(value);
                this._ToCurrency = value;
                this.OnToCurrencyChanged();
                this.OnPropertyChanged("ToCurrency");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _ToCurrency;
        partial void OnToCurrencyChanging(string value);
        partial void OnToCurrencyChanged();
        /// <summary>
        /// There are no comments for Property ValidForCompany in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("ValidForCompany")]
        public virtual global::System.Nullable<global::Microsoft.Dynamics.DataEntities.TableAll> ValidForCompany
        {
            get
            {
                return this._ValidForCompany;
            }
            set
            {
                this.OnValidForCompanyChanging(value);
                this._ValidForCompany = value;
                this.OnValidForCompanyChanged();
                this.OnPropertyChanged("ValidForCompany");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Nullable<global::Microsoft.Dynamics.DataEntities.TableAll> _ValidForCompany;
        partial void OnValidForCompanyChanging(global::System.Nullable<global::Microsoft.Dynamics.DataEntities.TableAll> value);
        partial void OnValidForCompanyChanged();
        /// <summary>
        /// There are no comments for Property ValidForExchangeRateType in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("ValidForExchangeRateType")]
        public virtual global::System.Nullable<global::Microsoft.Dynamics.DataEntities.TableAll> ValidForExchangeRateType
        {
            get
            {
                return this._ValidForExchangeRateType;
            }
            set
            {
                this.OnValidForExchangeRateTypeChanging(value);
                this._ValidForExchangeRateType = value;
                this.OnValidForExchangeRateTypeChanged();
                this.OnPropertyChanged("ValidForExchangeRateType");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::System.Nullable<global::Microsoft.Dynamics.DataEntities.TableAll> _ValidForExchangeRateType;
        partial void OnValidForExchangeRateTypeChanging(global::System.Nullable<global::Microsoft.Dynamics.DataEntities.TableAll> value);
        partial void OnValidForExchangeRateTypeChanged();
        /// <summary>
        /// There are no comments for Property TriangulationCurrency in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::Microsoft.OData.Client.OriginalNameAttribute("TriangulationCurrency")]
        public virtual string TriangulationCurrency
        {
            get
            {
                return this._TriangulationCurrency;
            }
            set
            {
                this.OnTriangulationCurrencyChanging(value);
                this._TriangulationCurrency = value;
                this.OnTriangulationCurrencyChanged();
                this.OnPropertyChanged("TriangulationCurrency");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _TriangulationCurrency;
        partial void OnTriangulationCurrencyChanging(string value);
        partial void OnTriangulationCurrencyChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
}
